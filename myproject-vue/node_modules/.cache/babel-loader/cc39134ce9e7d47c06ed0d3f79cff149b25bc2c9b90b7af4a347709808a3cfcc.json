{"ast":null,"code":"import BaseService from './BaseService';\nexport default class AuthenticationService extends BaseService {\n  registerUser(userData) {\n    return new Promise((resolve, reject) => {\n      const apiEndpoint = `${this.baseURL}user/register`;\n      this.http.post(apiEndpoint, userData).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n  loginUser(userData) {\n    return new Promise((resolve, reject) => {\n      const apiEndpoint = `${this.baseURL}user/login`;\n      this.http.post(apiEndpoint, userData).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n  // logoutUser(userToken) {\n  //   return new Promise((resolve, reject) => {\n  //     const apiEndpoint = `${this.baseURL}user/logout`;\n  //     this.http.post(apiEndpoint, userToken,{\n  //       headers: {\n  //         Accept: 'application/json',\n  //         'Content-Type': 'application/json',\n  //         Authorization: `Token  ${this.getUserToken()}`,\n  //       },\n  //     }).then((response) => {\n  //         resolve(response);\n  //       })\n  //       .catch((error) => {\n  //         reject(error);\n  //       });\n  //   });\n  // }\n}","map":{"version":3,"names":["BaseService","AuthenticationService","registerUser","userData","Promise","resolve","reject","apiEndpoint","baseURL","http","post","then","response","catch","error","loginUser"],"sources":["/home/shilpa/Public/my-work/code/simple-crud/myproject-vue/src/services/AuthenticationService.js"],"sourcesContent":["import BaseService from './BaseService';\n\nexport default class AuthenticationService extends BaseService {\n    \n    registerUser(userData) {\n        return new Promise((resolve, reject) => {\n          const apiEndpoint = `${this.baseURL}user/register`;\n          this.http.post(apiEndpoint, userData)\n            .then((response) => {\n              resolve(response);\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        });\n      }\n\n      loginUser(userData) {\n        return new Promise((resolve, reject) => {\n          const apiEndpoint = `${this.baseURL}user/login`;\n          this.http.post(apiEndpoint, userData)\n            .then((response) => {\n              resolve(response);\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        });\n      }\n      // logoutUser(userToken) {\n      //   return new Promise((resolve, reject) => {\n      //     const apiEndpoint = `${this.baseURL}user/logout`;\n      //     this.http.post(apiEndpoint, userToken,{\n      //       headers: {\n      //         Accept: 'application/json',\n      //         'Content-Type': 'application/json',\n      //         Authorization: `Token  ${this.getUserToken()}`,\n      //       },\n      //     }).then((response) => {\n      //         resolve(response);\n      //       })\n      //       .catch((error) => {\n      //         reject(error);\n      //       });\n      //   });\n      // }\n    \n  \n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AAEvC,eAAe,MAAMC,qBAAqB,SAASD,WAAW,CAAC;EAE3DE,YAAY,CAACC,QAAQ,EAAE;IACnB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,WAAW,GAAI,GAAE,IAAI,CAACC,OAAQ,eAAc;MAClD,IAAI,CAACC,IAAI,CAACC,IAAI,CAACH,WAAW,EAAEJ,QAAQ,CAAC,CAClCQ,IAAI,CAAEC,QAAQ,IAAK;QAClBP,OAAO,CAACO,QAAQ,CAAC;MACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBR,MAAM,CAACQ,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEAC,SAAS,CAACZ,QAAQ,EAAE;IAClB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,WAAW,GAAI,GAAE,IAAI,CAACC,OAAQ,YAAW;MAC/C,IAAI,CAACC,IAAI,CAACC,IAAI,CAACH,WAAW,EAAEJ,QAAQ,CAAC,CAClCQ,IAAI,CAAEC,QAAQ,IAAK;QAClBP,OAAO,CAACO,QAAQ,CAAC;MACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBR,MAAM,CAACQ,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAGN"},"metadata":{},"sourceType":"module","externalDependencies":[]}