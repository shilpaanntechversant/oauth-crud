{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      userName: '',\n      password: '',\n      errorMessage: {},\n      successMessage: '',\n      message: ''\n    };\n  },\n  methods: {\n    ...mapActions({\n      userLoginAction: 'userLogin'\n    }),\n    loginUser() {\n      try {\n        const userData = {\n          username: this.userName,\n          password: this.password\n        };\n        this.userLoginAction(userData).then(response => {\n          if (response.data.status.code === 200) {\n            this.successMessage = '';\n            localStorage.setItem('token', response.data.results.token);\n            localStorage.setItem('userId', response.data.results.id);\n            localStorage.setItem('username', response.data.results.username);\n            window.scrollTo(0, 0);\n            this.successMessage = response.data.status.message;\n            setTimeout(() => this.$router.push({\n              path: '/user/list'\n            }), 5000);\n            //return this.$router.push('/')\n          } else {\n            this.message = 'Some Error Occured. Can you please try again';\n            setTimeout(() => this.$router.push({\n              path: '/register'\n            }), 5000);\n\n            //return this.$router.push('/register')\n          }\n        });\n      } catch (error) {\n        console.log(error.response.data.results);\n        this.errorMessage = error.response.data.results;\n        // return this.$router.push('/register')\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters({\n      loginSuccess: 'getLoginSuccess',\n      loginErrors: 'getLoginErrors'\n    })\n  }\n};","map":{"version":3,"mappings":";AAqDA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACXC,IAAI,EAAC,WAAW;EAChBC,IAAI,GAAE;IACF,OAAM;MAEFC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC,EAAE;MACXC,YAAY,EAAC,CAAC,CAAC;MACfC,cAAc,EAAC,EAAE;MACjBC,OAAO,EAAC;IACZ;EACJ,CAAC;EACDC,OAAO,EAAC;IACN,GAAGT,UAAU,CAAC;MACZU,eAAe,EAAE;IACnB,CAAC,CAAC;IACFC,SAAS,GAAE;MAEP,IAAG;QACD,MAAMC,QAAO,GAAI;UACfC,QAAQ,EAAE,IAAI,CAACT,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,IAAI,CAACK,eAAe,CAACE,QAAQ,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;UAChD,IAAIA,QAAQ,CAACZ,IAAI,CAACa,MAAM,CAACC,IAAG,KAAM,GAAG,EAAC;YACpC,IAAI,CAACV,cAAa,GAAG,EAAC;YACtBW,YAAY,CAACC,OAAO,CAAC,OAAO,EAACJ,QAAQ,CAACZ,IAAI,CAACiB,OAAO,CAACC,KAAK;YACxDH,YAAY,CAACC,OAAO,CAAC,QAAQ,EAACJ,QAAQ,CAACZ,IAAI,CAACiB,OAAO,CAACE,EAAE;YACtDJ,YAAY,CAACC,OAAO,CAAC,UAAU,EAACJ,QAAQ,CAACZ,IAAI,CAACiB,OAAO,CAACP,QAAQ;YAC9DU,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;YACrB,IAAI,CAACjB,cAAa,GAAGQ,QAAQ,CAACZ,IAAI,CAACa,MAAM,CAACR,OAAM;YAChDiB,UAAU,CAAE,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;YACjE;UACF,CAAC,MAAI;YACH,IAAI,CAACpB,OAAM,GAAG,8CAA6C;YAE3DiB,UAAU,CAAE,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAW,CAAC,CAAC,EAAE,IAAI,CAAC;;YAEhE;UAEF;QACF,CAAC,CAAC;MACJ,EACF,OAAMC,KAAK,EAAC;QACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACd,QAAQ,CAACZ,IAAI,CAACiB,OAAO;QACvC,IAAI,CAACd,YAAY,GAACuB,KAAK,CAACd,QAAQ,CAACZ,IAAI,CAACiB,OAAM;QAC5C;MACF;IAIF;EACF,CAAC;;EACDY,QAAQ,EAAE;IACV,GAAG/B,UAAU,CAAC;MACVgC,YAAY,EAAE,iBAAiB;MAC/BC,WAAW,EAAE;IACf,CAAC;EACH;AACJ","names":["mapActions","mapGetters","name","data","userName","password","errorMessage","successMessage","message","methods","userLoginAction","loginUser","userData","username","then","response","status","code","localStorage","setItem","results","token","id","window","scrollTo","setTimeout","$router","push","path","error","console","log","computed","loginSuccess","loginErrors"],"sourceRoot":"","sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-3\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h3 text-success fw-bold\">\n          Login\n        </p>\n        <p class=\"fst-italic\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. </p>\n\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n            <p v-if=\"successMessage\" class=\"h4 text-success \">{{successMessage}}</p>\n            <p v-if=\"message\" class=\"h4 text-primary \">{{message}}</p>\n\n      </div>\n\n    </div>\n  </div>\n          \n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <form @submit.prevent=\"loginUser\">\n          <div class=\"mb-2\">\n            <input v-model=\"userName\" type=\"text\" class=\"form-control\" placeholder=\"UserName\">\n            <p v-if=\"errorMessage && errorMessage.username\" class=\"h6 text-danger \">{{errorMessage.username[0]}}</p>\n          </div>\n          <div class=\"mb-2\">\n            \n            <input v-model=\"data.password\" type=\"password\" class=\"form-control\" placeholder=\"Password\">\n            <p v-if=\"errorMessage && errorMessage.password\" class=\"h6 text-danger \">{{errorMessage.password[0]}}</p>\n          \n          </div>\n          \n          \n          <div class=\"mb-2\">\n            <input type=\"submit\" class=\"btn btn-success\" value=\"Login\">\n          </div>\n        </form>\n      </div>\n      <div class=\"col-md-4\">\n        <img class=\"user-img-big\" src=\"https://w7.pngwing.com/pngs/340/956/png-transparent-profile-user-icon-computer-icons-user-profile-head-ico-miscellaneous-black-desktop-wallpaper.png\" >\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n    name:'LoginView',\n    data(){\n        return{\n            \n            userName:'',\n            password:'',\n            errorMessage:{},\n            successMessage:'',\n            message:''\n        }\n    },\n    methods:{\n      ...mapActions({\n        userLoginAction: 'userLogin',\n      }),\n      loginUser(){\n  \n          try{\n            const userData = {\n              username: this.userName,\n              password: this.password,\n            };\n            this.userLoginAction(userData).then((response) => {\n              if (response.data.status.code === 200){\n                this.successMessage =''\n                localStorage.setItem('token',response.data.results.token)\n                localStorage.setItem('userId',response.data.results.id)\n                localStorage.setItem('username',response.data.results.username)\n                window.scrollTo(0, 0);\n                this.successMessage =response.data.status.message\n                setTimeout( () => this.$router.push({ path: '/user/list'}), 5000);\n                //return this.$router.push('/')\n              }else{\n                this.message ='Some Error Occured. Can you please try again'\n                \n                setTimeout( () => this.$router.push({ path: '/register'}), 5000);\n\n                //return this.$router.push('/register')\n\n              }\n            });\n          }\n        catch(error){\n          console.log(error.response.data.results)\n          this.errorMessage=error.response.data.results\n          // return this.$router.push('/register')\n        }\n        \n        \n\n      }\n    },\n    computed: {\n    ...mapGetters({\n        loginSuccess: 'getLoginSuccess',\n        loginErrors: 'getLoginErrors',\n      }),\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}