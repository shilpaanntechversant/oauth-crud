{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nimport HeaderComponent from '@/components/HeaderComponent.vue';\nexport default {\n  name: 'PostUpdate',\n  components: {\n    HeaderComponent\n  },\n  data() {\n    return {\n      headingValue: \"Update Post\",\n      postId: this.$route.params.postId,\n      post: {},\n      title: '',\n      description: '',\n      image: '',\n      successMessage: '',\n      message: '',\n      tagList: [],\n      selectetagList: []\n    };\n  },\n  mounted() {\n    this.isLoading = true;\n    this.postDetailsAction(this.postId).then(response => {\n      if (response.status === 200) {\n        this.post = response.data.results;\n        this.isLoading = false;\n      }\n    });\n    this.isLoading = true;\n    this.tagListAction().then(response => {\n      if (response.status === 200) {\n        this.tagList = response.data.results;\n        this.isLoading = false;\n      }\n    });\n  },\n  methods: {\n    ...mapActions({\n      postUpdateAction: 'postUpdate',\n      postDetailsAction: 'postDetails',\n      tagListAction: 'tagFullList'\n    }),\n    postUpdate() {\n      try {\n        const postData = {\n          id: this.postId,\n          title: this.post.title,\n          description: this.post.description,\n          image: this.post.image\n        };\n        console.log(postData);\n        this.postUpdateAction(postData).then(response => {\n          this.errorMessage.results = [];\n          if (response.data.status.code === 200) {\n            window.scrollTo(0, 0);\n            this.successMessage = response.data.status.message;\n            setTimeout(() => {\n              this.successMessage = '';\n            }, 3000);\n            setTimeout(() => this.$router.push({\n              path: '/post/list'\n            }), 3000);\n            //return this.$router.push('/')\n          } else {\n            this.message = 'Some Error Occured. Can you please try again';\n            setTimeout(() => {\n              this.message = '';\n            }, 3000);\n\n            //return this.$router.push('/register')\n          }\n        });\n      } catch (error) {\n        console.log(error.response.data.results);\n        this.errorMessage = error.response.data.results;\n        // return this.$router.push('/register')\n      }\n    },\n\n    startDrag(evt, item) {\n      evt.dataTransfer.dropEffect = 'move';\n      evt.dataTransfer.effectAllowed = 'move';\n      evt.dataTransfer.setData('itemID', item.id);\n    },\n    onDrop(evt, list) {\n      const itemID = evt.dataTransfer.getData('itemID');\n      if (list == 'tagList') {\n        const tag = this.selectetagList.find(item => item.id == itemID);\n        let index = this.selectetagList.findIndex(item => item.id == itemID);\n        this.selectetagList.splice(index, 1);\n        this.tagList.push(tag);\n      } else {\n        const tag = this.tagList.find(item => item.id == itemID);\n        let index = this.tagList.findIndex(item => item.id == itemID);\n        this.tagList.splice(index, 1);\n        this.selectetagList.push(tag);\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      successMessage: 'getPostSuccess',\n      errorMessage: 'getPostError',\n      postDetails: 'getpostDetails'\n    })\n  }\n};","map":{"version":3,"mappings":"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","names":["mapActions","mapGetters","HeaderComponent","name","components","data","headingValue","postId","$route","params","post","title","description","image","successMessage","message","tagList","selectetagList","mounted","isLoading","postDetailsAction","then","response","status","results","tagListAction","methods","postUpdateAction","postUpdate","postData","id","console","log","errorMessage","code","window","scrollTo","setTimeout","$router","push","path","error","startDrag","evt","item","dataTransfer","dropEffect","effectAllowed","setData","onDrop","list","itemID","getData","tag","find","index","findIndex","splice","computed","postDetails"],"sourceRoot":"","sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/views/PostUpdate.vue"],"sourcesContent":["<template>\n <HeaderComponent :heading=\"headingValue\" />\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n            <p v-if=\"successMessage\" class=\"h4 text-success \">{{successMessage}}</p>\n            <p v-if=\"message\" class=\"h4 text-primary \">{{message}}</p>\n\n      </div>\n\n    </div>\n  </div>\n  <div class=\"container\">\n    <form @submit.prevent=\"postUpdate\">\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n        \n          <div class=\"mb-2\">\n            <input v-model=\"post.title\" type=\"text\" class=\"form-control\" placeholder=\"Title\">\n            <p v-if=\"errorMessage.results && errorMessage.results.title\" class=\"h6 text-danger \">{{errorMessage.results.title[0]}}</p>\n          </div>\n          <div class=\"mb-2\">\n            \n            <textarea v-model=\"post.description\" class=\"form-control\" placeholder=\"Description\"></textarea>\n            <p v-if=\"errorMessage.results && errorMessage.results.description\" class=\"h6 text-danger \">{{errorMessage.results.description[0]}}</p>\n          </div>\n          <div class=\"mb-2\">\n            <input v-model=\"post.image\" type=\"text\" class=\"form-control\" placeholder=\"Image\">\n            <p v-if=\"errorMessage.results && errorMessage.results.image\" class=\"h6 text-danger \">{{errorMessage.results.image[0]}}</p>\n          </div>\n        </div>  \n        <div class=\"col-md-4\" v-if=\"post.image\">\n          <img class=\"user-img-big\" :src=\"post.image\" >\n\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"drop-zone\" \n            @drop=\"onDrop($event, 'tagList')\"\n            @dragover.prevent\n            @dragenter.prevent\n          >\n            <div\n              class=\"drag-el\"\n              v-for=\"item in tagList\"\n              :key=\"item.title\"\n              draggable=\"true\"\n              @dragstart=\"startDrag($event, item)\"\n            >\n              {{ item.title }}\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"drop-zone\" \n            @drop=\"onDrop($event, 'selectetagList')\"\n            @dragover.prevent\n            @dragenter.prevent\n          >\n            <div\n              class=\"drag-el\"\n              v-for=\"item in selectetagList\"\n              :key=\"item.title\"\n              draggable=\"true\"\n              @dragstart=\"startDrag($event, item)\"\n            >\n              {{ item.title }}\n            </div>\n\n          </div>\n        </div>\n        <div class=\"mb-2\">\n          <input type=\"submit\" class=\"btn btn-success\" value=\"Update\">\n        </div>\n      </div>\n    </form>\n      \n      \n    \n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport HeaderComponent from  '@/components/HeaderComponent.vue'\n\nexport default {\n    name:'PostUpdate',\n    components:{\n      HeaderComponent\n    },\n    data(){\n        return{\n            headingValue : \"Update Post\",\n            postId: this.$route.params.postId,\n            post:{},\n            title:'',\n            description:'',\n            image:'',\n            successMessage:'',\n            message:'',\n            tagList:[],\n            selectetagList:[], \n            \n            \n        }\n    },\n    mounted(){\n        this.isLoading = true;\n        this.postDetailsAction(this.postId).then((response) => {\n        if (response.status === 200) {\n          this.post = response.data.results;\n          this.isLoading = false;\n        }\n      });\n      this.isLoading = true;\n      this.tagListAction().then((response) => {\n        if (response.status === 200) {\n          this.tagList = response.data.results;\n          this.isLoading = false;\n        }\n      });\n\n    },\n    methods:{\n      ...mapActions({\n        postUpdateAction: 'postUpdate',\n        postDetailsAction: 'postDetails',\n        tagListAction: 'tagFullList',\n      }),\n      postUpdate(){\n          try{\n            const postData = {\n              id: this.postId,\n              title: this.post.title,\n              description: this.post.description,\n              image: this.post.image,\n            };\n            console.log(postData)\n            this.postUpdateAction(postData).then((response) => {\n              this.errorMessage.results=[]\n\n              if (response.data.status.code === 200){\n                window.scrollTo(0, 0);\n                this.successMessage =response.data.status.message\n                setTimeout(() => {\n                  this.successMessage = '';\n                }, 3000);\n                setTimeout( () => this.$router.push({ path: '/post/list'}), 3000);\n                //return this.$router.push('/')\n              }else{\n                this.message ='Some Error Occured. Can you please try again'\n                setTimeout(() => {\n                  this.message = '';\n                }, 3000);\n\n                //return this.$router.push('/register')\n\n              }\n            });\n          }\n        catch(error){\n          console.log(error.response.data.results)\n          this.errorMessage=error.response.data.results\n          // return this.$router.push('/register')\n        }\n      },\n      startDrag(evt, item) {\n        evt.dataTransfer.dropEffect = 'move'\n        evt.dataTransfer.effectAllowed = 'move'\n        evt.dataTransfer.setData('itemID', item.id)\n      },\n      onDrop(evt, list) {\n        const itemID = evt.dataTransfer.getData('itemID')\n        if(list == 'tagList'){\n          const tag =  this.selectetagList.find((item) => item.id == itemID)\n          let index = this.selectetagList.findIndex(item => item.id  == itemID)\n          this.selectetagList.splice(index, 1)\n          this.tagList.push(tag)\n        }else{\n         const tag =  this.tagList.find((item) => item.id == itemID)\n         let index = this.tagList.findIndex(item => item.id  == itemID)\n         this.tagList.splice(index, 1)\n         this.selectetagList.push(tag)\n\n\n        }\n      },\n    },\n    computed: {\n    ...mapGetters({\n        successMessage: 'getPostSuccess',\n        errorMessage: 'getPostError',\n        postDetails: 'getpostDetails',\n\n      }),\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}