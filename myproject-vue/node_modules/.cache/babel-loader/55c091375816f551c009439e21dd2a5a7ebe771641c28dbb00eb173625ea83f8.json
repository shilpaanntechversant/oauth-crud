{"ast":null,"code":"import AuthenticationService from '@/services/AuthenticationService';\nimport * as types from './mutation-types';\nconst authenticationService = new AuthenticationService();\nexport const userSignup = ({\n  commit\n}, userData) => new Promise((resolve, reject) => {\n  authenticationService.signup(userData).then(response => {\n    commit(types.SET_SIGNUP_SUCCESS, response);\n    resolve(response);\n  }).catch(error => {\n    commit(types.SET_SIGNUP_ERRORS, error.response.data);\n    reject(error);\n  });\n});\nexport const userLogin = ({\n  commit\n}, userCredentials) => new Promise((resolve, reject) => {\n  authenticationService.login(userCredentials).then(success => {\n    commit(types.SET_LOGIN_SUCCESS, success.data.status);\n    resolve(success);\n  }).catch(error => {\n    commit(types.SET_LOGIN_ERRORS, error.response.data);\n    reject(error);\n  });\n});\nexport const emailVerification = ({\n  commit\n}, emailData) => new Promise((resolve, reject) => {\n  authenticationService.emailVerification(emailData).then(success => {\n    commit(types.SET_EMAIL_VERIFICATION_SUCCESS, success.data.status);\n    resolve(success);\n  }).catch(error => {\n    commit(types.SET_EMAIL_VERIFICATION_ERRORS, error.response.data);\n    reject(error);\n  });\n});","map":{"version":3,"names":["AuthenticationService","types","authenticationService","userSignup","commit","userData","Promise","resolve","reject","signup","then","response","SET_SIGNUP_SUCCESS","catch","error","SET_SIGNUP_ERRORS","data","userLogin","userCredentials","login","success","SET_LOGIN_SUCCESS","status","SET_LOGIN_ERRORS","emailVerification","emailData","SET_EMAIL_VERIFICATION_SUCCESS","SET_EMAIL_VERIFICATION_ERRORS"],"sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/store/Authentication/actions.js"],"sourcesContent":["import AuthenticationService from '@/services/AuthenticationService';\r\n\r\nimport * as types from './mutation-types';\r\n\r\nconst authenticationService = new AuthenticationService();\r\n\r\nexport const userSignup = ({ commit }, userData) => new Promise((resolve, reject) => {\r\n  authenticationService\r\n    .signup(userData)\r\n    .then((response) => {\r\n      commit(types.SET_SIGNUP_SUCCESS, response);\r\n      resolve(response);\r\n    })\r\n    .catch((error) => {\r\n      commit(types.SET_SIGNUP_ERRORS, error.response.data);\r\n      reject(error);\r\n    });\r\n});\r\n\r\nexport const userLogin = ({ commit }, userCredentials) => new Promise((resolve, reject) => {\r\n  authenticationService\r\n    .login(userCredentials)\r\n    .then((success) => {\r\n      commit(types.SET_LOGIN_SUCCESS, success.data.status);\r\n      resolve(success);\r\n    })\r\n    .catch((error) => {\r\n      commit(types.SET_LOGIN_ERRORS, error.response.data);\r\n      reject(error);\r\n    });\r\n});\r\n\r\nexport const emailVerification = ({ commit }, emailData) => new Promise((resolve, reject) => {\r\n  authenticationService\r\n    .emailVerification(emailData)\r\n    .then((success) => {\r\n      commit(types.SET_EMAIL_VERIFICATION_SUCCESS, success.data.status);\r\n      resolve(success);\r\n    })\r\n    .catch((error) => {\r\n      commit(types.SET_EMAIL_VERIFICATION_ERRORS, error.response.data);\r\n      reject(error);\r\n    });\r\n});\r\n"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,kCAAkC;AAEpE,OAAO,KAAKC,KAAK,MAAM,kBAAkB;AAEzC,MAAMC,qBAAqB,GAAG,IAAIF,qBAAqB,EAAE;AAEzD,OAAO,MAAMG,UAAU,GAAG,CAAC;EAAEC;AAAO,CAAC,EAAEC,QAAQ,KAAK,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EACnFN,qBAAqB,CAClBO,MAAM,CAACJ,QAAQ,CAAC,CAChBK,IAAI,CAAEC,QAAQ,IAAK;IAClBP,MAAM,CAACH,KAAK,CAACW,kBAAkB,EAAED,QAAQ,CAAC;IAC1CJ,OAAO,CAACI,QAAQ,CAAC;EACnB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChBV,MAAM,CAACH,KAAK,CAACc,iBAAiB,EAAED,KAAK,CAACH,QAAQ,CAACK,IAAI,CAAC;IACpDR,MAAM,CAACM,KAAK,CAAC;EACf,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,OAAO,MAAMG,SAAS,GAAG,CAAC;EAAEb;AAAO,CAAC,EAAEc,eAAe,KAAK,IAAIZ,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EACzFN,qBAAqB,CAClBiB,KAAK,CAACD,eAAe,CAAC,CACtBR,IAAI,CAAEU,OAAO,IAAK;IACjBhB,MAAM,CAACH,KAAK,CAACoB,iBAAiB,EAAED,OAAO,CAACJ,IAAI,CAACM,MAAM,CAAC;IACpDf,OAAO,CAACa,OAAO,CAAC;EAClB,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;IAChBV,MAAM,CAACH,KAAK,CAACsB,gBAAgB,EAAET,KAAK,CAACH,QAAQ,CAACK,IAAI,CAAC;IACnDR,MAAM,CAACM,KAAK,CAAC;EACf,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,OAAO,MAAMU,iBAAiB,GAAG,CAAC;EAAEpB;AAAO,CAAC,EAAEqB,SAAS,KAAK,IAAInB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAC3FN,qBAAqB,CAClBsB,iBAAiB,CAACC,SAAS,CAAC,CAC5Bf,IAAI,CAAEU,OAAO,IAAK;IACjBhB,MAAM,CAACH,KAAK,CAACyB,8BAA8B,EAAEN,OAAO,CAACJ,IAAI,CAACM,MAAM,CAAC;IACjEf,OAAO,CAACa,OAAO,CAAC;EAClB,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;IAChBV,MAAM,CAACH,KAAK,CAAC0B,6BAA6B,EAAEb,KAAK,CAACH,QAAQ,CAACK,IAAI,CAAC;IAChER,MAAM,CAACM,KAAK,CAAC;EACf,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}