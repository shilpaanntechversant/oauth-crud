{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      data: {\n        username: '',\n        password: ''\n      },\n      errorMessage: {},\n      successMessage: '',\n      message: ''\n    };\n  },\n  methods: {\n    loginUser: async function () {\n      try {\n        let response = await AuthenticationService.loginUser(this.data);\n        if (response) {\n          this.successMessage = '';\n          localStorage.setItem('token', response.data.results.token);\n          localStorage.setItem('userId', response.data.results.id);\n          localStorage.setItem('username', response.data.results.username);\n          this.successMessage = response.data.status.message;\n          setTimeout(() => this.$router.push({\n            path: '/user/list'\n          }), 5000);\n          //return this.$router.push('/')\n        } else {\n          this.message = 'Some Error Occured. Can you please try again';\n          setTimeout(() => this.$router.push({\n            path: '/register'\n          }), 5000);\n\n          //return this.$router.push('/register')\n        }\n      } catch (error) {\n        console.log(error.response.data.results);\n        this.errorMessage = error.response.data.results;\n        // return this.$router.push('/register')\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqDA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACXC,IAAI,EAAC,WAAW;EAChBC,IAAI,GAAE;IACF,OAAM;MACFA,IAAI,EAAC;QACDC,QAAQ,EAAC,EAAE;QACXC,QAAQ,EAAC;MAEb,CAAC;MACDC,YAAY,EAAC,CAAC,CAAC;MACfC,cAAc,EAAC,EAAE;MACjBC,OAAO,EAAC;IACZ;EACJ,CAAC;EACDC,OAAO,EAAC;IACNC,SAAS,EAAE,kBAAgB;MAEvB,IAAG;QACH,IAAIC,QAAO,GAAI,MAAMC,qBAAqB,CAACF,SAAS,CAAC,IAAI,CAACP,IAAI,CAAC;QAC/D,IAAIQ,QAAQ,EAAC;UACX,IAAI,CAACJ,cAAa,GAAG,EAAC;UACtBM,YAAY,CAACC,OAAO,CAAC,OAAO,EAACH,QAAQ,CAACR,IAAI,CAACY,OAAO,CAACC,KAAK;UACxDH,YAAY,CAACC,OAAO,CAAC,QAAQ,EAACH,QAAQ,CAACR,IAAI,CAACY,OAAO,CAACE,EAAE;UACtDJ,YAAY,CAACC,OAAO,CAAC,UAAU,EAACH,QAAQ,CAACR,IAAI,CAACY,OAAO,CAACX,QAAQ;UAC9D,IAAI,CAACG,cAAa,GAAGI,QAAQ,CAACR,IAAI,CAACe,MAAM,CAACV,OAAM;UAChDW,UAAU,CAAE,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAY,CAAC,CAAC,EAAE,IAAI,CAAC;UACjE;QACF,CAAC,MAAI;UACH,IAAI,CAACd,OAAM,GAAG,8CAA6C;UAE3DW,UAAU,CAAE,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAW,CAAC,CAAC,EAAE,IAAI,CAAC;;UAEhE;QAEF;MACF,EACA,OAAMC,KAAK,EAAC;QACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACZ,QAAQ,CAACR,IAAI,CAACY,OAAO;QACvC,IAAI,CAACT,YAAY,GAACiB,KAAK,CAACZ,QAAQ,CAACR,IAAI,CAACY,OAAM;QAC5C;MACF;IAIF;EACF;AACJ","names":["mapActions","mapGetters","name","data","username","password","errorMessage","successMessage","message","methods","loginUser","response","AuthenticationService","localStorage","setItem","results","token","id","status","setTimeout","$router","push","path","error","console","log"],"sourceRoot":"","sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-3\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p class=\"h3 text-success fw-bold\">\n          Login\n        </p>\n        <p class=\"fst-italic\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. </p>\n\n      </div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n            <p v-if=\"successMessage\" class=\"h4 text-success \">{{successMessage}}</p>\n            <p v-if=\"message\" class=\"h4 text-primary \">{{message}}</p>\n\n      </div>\n\n    </div>\n  </div>\n          \n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <form @submit.prevent=\"loginUser\">\n          <div class=\"mb-2\">\n            <input v-model=\"data.username\" type=\"text\" class=\"form-control\" placeholder=\"UserName\">\n            <p v-if=\"errorMessage && errorMessage.username\" class=\"h6 text-danger \">{{errorMessage.username[0]}}</p>\n          </div>\n          <div class=\"mb-2\">\n            \n            <input v-model=\"data.password\" type=\"password\" class=\"form-control\" placeholder=\"Password\">\n            <p v-if=\"errorMessage && errorMessage.password\" class=\"h6 text-danger \">{{errorMessage.password[0]}}</p>\n          \n          </div>\n          \n          \n          <div class=\"mb-2\">\n            <input type=\"submit\" class=\"btn btn-success\" value=\"Login\">\n          </div>\n        </form>\n      </div>\n      <div class=\"col-md-4\">\n        <img class=\"user-img-big\" src=\"https://w7.pngwing.com/pngs/340/956/png-transparent-profile-user-icon-computer-icons-user-profile-head-ico-miscellaneous-black-desktop-wallpaper.png\" >\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n    name:'LoginView',\n    data(){\n        return{\n            data:{\n                username:'',\n                password:''\n               \n            },\n            errorMessage:{},\n            successMessage:'',\n            message:''\n        }\n    },\n    methods:{\n      loginUser: async function(){\n  \n          try{\n          let response = await AuthenticationService.loginUser(this.data);\n          if (response){\n            this.successMessage =''\n            localStorage.setItem('token',response.data.results.token)\n            localStorage.setItem('userId',response.data.results.id)\n            localStorage.setItem('username',response.data.results.username)\n            this.successMessage =response.data.status.message\n            setTimeout( () => this.$router.push({ path: '/user/list'}), 5000);\n            //return this.$router.push('/')\n          }else{\n            this.message ='Some Error Occured. Can you please try again'\n            \n            setTimeout( () => this.$router.push({ path: '/register'}), 5000);\n\n            //return this.$router.push('/register')\n\n          }\n        }\n        catch(error){\n          console.log(error.response.data.results)\n          this.errorMessage=error.response.data.results\n          // return this.$router.push('/register')\n        }\n        \n        \n\n      }\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}