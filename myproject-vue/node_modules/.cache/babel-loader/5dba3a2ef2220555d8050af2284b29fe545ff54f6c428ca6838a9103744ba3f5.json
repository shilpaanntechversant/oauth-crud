{"ast":null,"code":"import UserService from '@/services/UserService';\nimport * as types from './mutation-types';\nconst userService = new UserService();\nexport const userList = ({\n  commit\n}) => new Promise((resolve, reject) => {\n  userService.userList().then(response => {\n    commit(types.SET_USER_LIST, response);\n    resolve(response);\n  }).catch(error => {\n    reject(error);\n  });\n});\nexport const userLogin = ({\n  commit\n}, userData) => new Promise((resolve, reject) => {\n  authenticationService.loginUser(userData).then(response => {\n    commit(types.SET_LOGIN_SUCCESS, response);\n    resolve(response);\n  }).catch(error => {\n    commit(types.SET_LOGIN_ERRORS, error.response.data);\n    reject(error);\n  });\n});\nexport const userLogout = ({\n  commit\n}, userToken) => new Promise((resolve, reject) => {\n  authenticationService.logoutUser(userToken).then(response => {\n    commit(types.SET_LOGOUT_SUCCESS, response);\n    resolve(response);\n  }).catch(error => {\n    console.log('error.response.data', error);\n    commit(types.SET_LOGOUT_ERRORS, error.response);\n    reject(error);\n  });\n});","map":{"version":3,"names":["UserService","types","userService","userList","commit","Promise","resolve","reject","then","response","SET_USER_LIST","catch","error","userLogin","userData","authenticationService","loginUser","SET_LOGIN_SUCCESS","SET_LOGIN_ERRORS","data","userLogout","userToken","logoutUser","SET_LOGOUT_SUCCESS","console","log","SET_LOGOUT_ERRORS"],"sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/store/User/actions.js"],"sourcesContent":["import UserService from '@/services/UserService';\r\n\r\nimport * as types from './mutation-types';\r\n\r\nconst userService = new UserService();\r\n\r\nexport const userList = ({ commit }) => new Promise((resolve, reject) => {\r\n  userService\r\n    .userList()\r\n    .then((response) => {\r\n      commit(types.SET_USER_LIST, response);\r\n      resolve(response);\r\n    })\r\n    .catch((error) => {\r\n      reject(error);\r\n    });\r\n});\r\n\r\nexport const userLogin = ({ commit }, userData) => new Promise((resolve, reject) => {\r\n  authenticationService\r\n    .loginUser(userData)\r\n    .then((response) => {\r\n      commit(types.SET_LOGIN_SUCCESS, response);\r\n      resolve(response);\r\n    })\r\n    .catch((error) => {\r\n      commit(types.SET_LOGIN_ERRORS, error.response.data);\r\n      reject(error);\r\n    });\r\n});\r\nexport const userLogout = ({ commit }, userToken) => new Promise((resolve, reject) => {\r\n  authenticationService\r\n    .logoutUser(userToken)\r\n    .then((response) => {\r\n      commit(types.SET_LOGOUT_SUCCESS, response);\r\n      resolve(response);\r\n    })\r\n    .catch((error) => {\r\n      console.log('error.response.data',error)\r\n      commit(types.SET_LOGOUT_ERRORS, error.response);\r\n      reject(error);\r\n    });\r\n});\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAEhD,OAAO,KAAKC,KAAK,MAAM,kBAAkB;AAEzC,MAAMC,WAAW,GAAG,IAAIF,WAAW,EAAE;AAErC,OAAO,MAAMG,QAAQ,GAAG,CAAC;EAAEC;AAAO,CAAC,KAAK,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EACvEL,WAAW,CACRC,QAAQ,EAAE,CACVK,IAAI,CAAEC,QAAQ,IAAK;IAClBL,MAAM,CAACH,KAAK,CAACS,aAAa,EAAED,QAAQ,CAAC;IACrCH,OAAO,CAACG,QAAQ,CAAC;EACnB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChBL,MAAM,CAACK,KAAK,CAAC;EACf,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG,CAAC;EAAET;AAAO,CAAC,EAAEU,QAAQ,KAAK,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAClFQ,qBAAqB,CAClBC,SAAS,CAACF,QAAQ,CAAC,CACnBN,IAAI,CAAEC,QAAQ,IAAK;IAClBL,MAAM,CAACH,KAAK,CAACgB,iBAAiB,EAAER,QAAQ,CAAC;IACzCH,OAAO,CAACG,QAAQ,CAAC;EACnB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChBR,MAAM,CAACH,KAAK,CAACiB,gBAAgB,EAAEN,KAAK,CAACH,QAAQ,CAACU,IAAI,CAAC;IACnDZ,MAAM,CAACK,KAAK,CAAC;EACf,CAAC,CAAC;AACN,CAAC,CAAC;AACF,OAAO,MAAMQ,UAAU,GAAG,CAAC;EAAEhB;AAAO,CAAC,EAAEiB,SAAS,KAAK,IAAIhB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EACpFQ,qBAAqB,CAClBO,UAAU,CAACD,SAAS,CAAC,CACrBb,IAAI,CAAEC,QAAQ,IAAK;IAClBL,MAAM,CAACH,KAAK,CAACsB,kBAAkB,EAAEd,QAAQ,CAAC;IAC1CH,OAAO,CAACG,QAAQ,CAAC;EACnB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChBY,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACb,KAAK,CAAC;IACxCR,MAAM,CAACH,KAAK,CAACyB,iBAAiB,EAAEd,KAAK,CAACH,QAAQ,CAAC;IAC/CF,MAAM,CAACK,KAAK,CAAC;EACf,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}