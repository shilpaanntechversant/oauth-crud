{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"h4 text-success\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"h4 text-primary\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderComponent = _resolveComponent(\"HeaderComponent\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderComponent, {\n    heading: $data.headingValue\n  }, null, 8 /* PROPS */, [\"heading\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$data.successMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"pre\", null, _toDisplayString($data.postId), 1 /* TEXT */), _createCommentVNode(\" <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <form @submit.prevent=\\\"postUpdate\\\">\\n          <div class=\\\"mb-2\\\">\\n            <input v-model=\\\"post.title\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\">\\n            <p v-if=\\\"errorMessage.results && errorMessage.results.title\\\" class=\\\"h6 text-danger \\\">{{errorMessage.results.title[0]}}</p>\\n          </div>\\n          <div class=\\\"mb-2\\\">\\n            \\n            <textarea v-model=\\\"post.description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"></textarea>\\n            <p v-if=\\\"errorMessage.results && errorMessage.results.description\\\" class=\\\"h6 text-danger \\\">{{errorMessage.results.description[0]}}</p>\\n          </div>\\n          <div class=\\\"mb-2\\\">\\n            <input v-model=\\\"post.image\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Image\\\">\\n            <p v-if=\\\"errorMessage.results && errorMessage.results.image\\\" class=\\\"h6 text-danger \\\">{{errorMessage.results.image[0]}}</p>\\n          </div>\\n          \\n          <div class=\\\"mb-2\\\">\\n            <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Create\\\">\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"col-md-4\\\" v-if=\\\"post.image\\\">\\n        <img class=\\\"user-img-big\\\" :src=\\\"post.image\\\" >\\n\\n      </div>\\n    </div>\\n  </div> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAGOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAK;;;EACeA,KAAK,EAAC;;;;EACbA,KAAK,EAAC;;;;6DANnCC,aAA2CC;IAAzBC,OAAO,EAAEC;EAAY,sCAEtCC,oBASM,OATNC,UASM,GARJD,oBAOM,OAPNE,UAOM,GANJF,oBAIM,OAJNG,UAIM,GAHSJ,oBAAc,kBAAvBK,oBAAwE,KAAxEC,UAAwE,mBAApBN,oBAAc,uDACzDA,aAAO,kBAAhBK,oBAA0D,KAA1DE,UAA0D,mBAAbP,aAAO,6DAM9DC,oBAAqB,8BAAdD,YAAM,kBACbQ,i3CA4BU","names":["class","_createVNode","_component_HeaderComponent","heading","$data","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_4","_hoisted_5","_createCommentVNode"],"sourceRoot":"","sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/views/PostUpdate.vue"],"sourcesContent":["<template>\n <HeaderComponent :heading=\"headingValue\" />\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n            <p v-if=\"successMessage\" class=\"h4 text-success \">{{successMessage}}</p>\n            <p v-if=\"message\" class=\"h4 text-primary \">{{message}}</p>\n\n      </div>\n\n    </div>\n  </div>\n  <pre>{{postId}}</pre>\n  <!-- <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <form @submit.prevent=\"postUpdate\">\n          <div class=\"mb-2\">\n            <input v-model=\"post.title\" type=\"text\" class=\"form-control\" placeholder=\"Title\">\n            <p v-if=\"errorMessage.results && errorMessage.results.title\" class=\"h6 text-danger \">{{errorMessage.results.title[0]}}</p>\n          </div>\n          <div class=\"mb-2\">\n            \n            <textarea v-model=\"post.description\" class=\"form-control\" placeholder=\"Description\"></textarea>\n            <p v-if=\"errorMessage.results && errorMessage.results.description\" class=\"h6 text-danger \">{{errorMessage.results.description[0]}}</p>\n          </div>\n          <div class=\"mb-2\">\n            <input v-model=\"post.image\" type=\"text\" class=\"form-control\" placeholder=\"Image\">\n            <p v-if=\"errorMessage.results && errorMessage.results.image\" class=\"h6 text-danger \">{{errorMessage.results.image[0]}}</p>\n          </div>\n          \n          <div class=\"mb-2\">\n            <input type=\"submit\" class=\"btn btn-success\" value=\"Create\">\n          </div>\n        </form>\n      </div>\n      <div class=\"col-md-4\" v-if=\"post.image\">\n        <img class=\"user-img-big\" :src=\"post.image\" >\n\n      </div>\n    </div>\n  </div> -->\n</template>\n\n<script>\n// import { mapActions, mapGetters } from 'vuex';\nimport HeaderComponent from  '@/components/HeaderComponent.vue'\n\nexport default {\n    name:'PostUpdate',\n    components:{\n      HeaderComponent\n    },\n    data(){\n        return{\n            headingValue : \"Update Post\",\n            postId: this.$route.params.postId,\n            title:'',\n            description:'',\n            image:'',\n            successMessage:'',\n            message:'',\n            \n            \n        }\n    },\n    // mounted(){\n    //     this.isLoading = true;\n    //     this.postDetailsAction(this.postId).then((response) => {\n    //     if (response.status === 200) {\n    //       this.post = response.data.results;\n    //       this.isLoading = false;\n    //     }\n    //   });\n    // },\n    // methods:{\n    //   ...mapActions({\n    //     postUpdateAction: 'PostUpdate',\n    //     postDetailsAction: 'postDetails',\n    //   }),\n    //   postUpdate(){\n    //       try{\n    //         const postData = {\n    //           id: this.postId,\n    //           title: this.post.title,\n    //           description: this.post.description,\n    //           image: this.post.image,\n    //         };\n    //         console.log(postData)\n    //         this.postUpdateAction(postData).then((response) => {\n    //           this.errorMessage.results=[]\n\n    //           if (response.data.status.code === 200){\n    //             window.scrollTo(0, 0);\n    //             this.successMessage =response.data.status.message\n    //             setTimeout(() => {\n    //               this.successMessage = '';\n    //             }, 3000);\n    //             setTimeout( () => this.$router.push({ path: '/post/list'}), 3000);\n    //             //return this.$router.push('/')\n    //           }else{\n    //             this.message ='Some Error Occured. Can you please try again'\n    //             setTimeout(() => {\n    //               this.message = '';\n    //             }, 3000);\n\n    //             //return this.$router.push('/register')\n\n    //           }\n    //         });\n    //       }\n    //     catch(error){\n    //       console.log(error.response.data.results)\n    //       this.errorMessage=error.response.data.results\n    //       // return this.$router.push('/register')\n    //     }\n        \n        \n\n    //   }\n    // },\n    // computed: {\n    // ...mapGetters({\n    //     successMessage: 'getPostSuccess',\n    //     errorMessage: 'getPostError',\n    //     postDetails: 'getpostDetails',\n\n    //   }),\n    // }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}