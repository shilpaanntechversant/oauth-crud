{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport MyHome from '../views/MyHome.vue';\nimport RegistrationView from '../views/RegistrationView.vue';\nimport LoginView from '../views/LoginView.vue';\nimport UserList from '../views/UserList.vue';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: MyHome\n}, {\n  path: '/register',\n  name: 'register',\n  component: RegistrationView\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView\n}, {\n  path: '/user/list',\n  name: 'userlist',\n  component: UserList,\n  meta: {\n    requiresAuth: true\n  }\n}];\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isAuthenticated()) {\n      next('/login');\n    }\n  } else {\n    next();\n  }\n});\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","MyHome","RegistrationView","LoginView","UserList","routes","path","name","component","meta","requiresAuth","router","beforeEach","to","from","next","matched","some","record","isAuthenticated","history","process","env","BASE_URL"],"sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport MyHome from '../views/MyHome.vue'\nimport RegistrationView from '../views/RegistrationView.vue'\nimport LoginView from '../views/LoginView.vue'\nimport UserList from '../views/UserList.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: MyHome\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: RegistrationView\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView\n  },\n\n  {\n    path: '/user/list',\n    name: 'userlist',\n    component: UserList,\n    meta: {\n      requiresAuth: true\n    }\n\n  },\n  \n]\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    if (!isAuthenticated()) {\n       next('/login')\n    }\n  } else {\n     next()\n  }\n})\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL;AACb,CAAC,EAED;EACEG,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ,QAAQ;EACnBK,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AAEF,CAAC,CAEF;AACDC,MAAM,CAACC,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACT,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD,IAAI,CAACS,eAAe,EAAE,EAAE;MACrBJ,IAAI,CAAC,QAAQ,CAAC;IACjB;EACF,CAAC,MAAM;IACJA,IAAI,EAAE;EACT;AACF,CAAC,CAAC;AACF,MAAMJ,MAAM,GAAGZ,YAAY,CAAC;EAC1BqB,OAAO,EAAEpB,gBAAgB,CAACqB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/ClB;AACF,CAAC,CAAC;AAEF,eAAeM,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}