{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nimport HeaderComponent from '@/components/HeaderComponent.vue';\nexport default {\n  name: 'TagUpdate',\n  components: {\n    HeaderComponent\n  },\n  data() {\n    return {\n      headingValue: \"Update Tag\",\n      tagId: this.$route.params.tagId,\n      tag: {},\n      title: '',\n      description: '',\n      successMessage: '',\n      message: ''\n    };\n  },\n  mounted() {\n    this.isLoading = true;\n    this.tagDetailsAction(this.postId).then(response => {\n      if (response.status === 200) {\n        this.tag = response.data.results;\n        this.isLoading = false;\n      }\n    });\n  },\n  methods: {\n    ...mapActions({\n      tagUpdateAction: 'tagUpdate',\n      tagDetailsAction: 'tagDetails'\n    }),\n    tagUpdate() {\n      try {\n        const tagData = {\n          id: this.tagId,\n          title: this.post.title,\n          description: this.post.description\n        };\n        this.tagUpdateAction(tagData).then(response => {\n          this.errorMessage.results = [];\n          if (response.data.status.code === 200) {\n            window.scrollTo(0, 0);\n            this.successMessage = response.data.status.message;\n            setTimeout(() => {\n              this.successMessage = '';\n            }, 3000);\n            setTimeout(() => this.$router.push({\n              path: '/post/list'\n            }), 3000);\n            //return this.$router.push('/')\n          } else {\n            this.message = 'Some Error Occured. Can you please try again';\n            setTimeout(() => {\n              this.message = '';\n            }, 3000);\n\n            //return this.$router.push('/register')\n          }\n        });\n      } catch (error) {\n        console.log(error.response.data.results);\n        this.errorMessage = error.response.data.results;\n        // return this.$router.push('/register')\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters({\n      successMessage: 'getPostSuccess',\n      errorMessage: 'getPostError',\n      postDetails: 'getpostDetails'\n    })\n  }\n};","map":{"version":3,"mappings":";AAsCA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,eAAc,MAAQ,kCAAiC;AAE9D,eAAe;EACXC,IAAI,EAAC,WAAW;EAChBC,UAAU,EAAC;IACTF;EACF,CAAC;EACDG,IAAI,GAAE;IACF,OAAM;MACFC,YAAW,EAAI,YAAY;MAC3BC,KAAK,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,KAAK;MAC/BG,GAAG,EAAC,CAAC,CAAC;MACNC,KAAK,EAAC,EAAE;MACRC,WAAW,EAAC,EAAE;MACdC,cAAc,EAAC,EAAE;MACjBC,OAAO,EAAC;IAGZ;EACJ,CAAC;EACDC,OAAO,GAAE;IACL,IAAI,CAACC,SAAQ,GAAI,IAAI;IACrB,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACtD,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;QAC3B,IAAI,CAACX,GAAE,GAAIU,QAAQ,CAACf,IAAI,CAACiB,OAAO;QAChC,IAAI,CAACN,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC,CAAC;EACJ,CAAC;EACDO,OAAO,EAAC;IACN,GAAGvB,UAAU,CAAC;MACZwB,eAAe,EAAE,WAAW;MAC5BP,gBAAgB,EAAE;IACpB,CAAC,CAAC;IACFQ,SAAS,GAAE;MACP,IAAG;QACD,MAAMC,OAAM,GAAI;UACdC,EAAE,EAAE,IAAI,CAACpB,KAAK;UACdI,KAAK,EAAE,IAAI,CAACiB,IAAI,CAACjB,KAAK;UACtBC,WAAW,EAAE,IAAI,CAACgB,IAAI,CAAChB;QACzB,CAAC;QACD,IAAI,CAACY,eAAe,CAACE,OAAO,CAAC,CAACP,IAAI,CAAEC,QAAQ,IAAK;UAC/C,IAAI,CAACS,YAAY,CAACP,OAAO,GAAC,EAAC;UAE3B,IAAIF,QAAQ,CAACf,IAAI,CAACgB,MAAM,CAACS,IAAG,KAAM,GAAG,EAAC;YACpCC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;YACrB,IAAI,CAACnB,cAAa,GAAGO,QAAQ,CAACf,IAAI,CAACgB,MAAM,CAACP,OAAM;YAChDmB,UAAU,CAAC,MAAM;cACf,IAAI,CAACpB,cAAa,GAAI,EAAE;YAC1B,CAAC,EAAE,IAAI,CAAC;YACRoB,UAAU,CAAE,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;YACjE;UACF,CAAC,MAAI;YACH,IAAI,CAACtB,OAAM,GAAG,8CAA6C;YAC3DmB,UAAU,CAAC,MAAM;cACf,IAAI,CAACnB,OAAM,GAAI,EAAE;YACnB,CAAC,EAAE,IAAI,CAAC;;YAER;UAEF;QACF,CAAC,CAAC;MACJ,EACF,OAAMuB,KAAK,EAAC;QACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACjB,QAAQ,CAACf,IAAI,CAACiB,OAAO;QACvC,IAAI,CAACO,YAAY,GAACQ,KAAK,CAACjB,QAAQ,CAACf,IAAI,CAACiB,OAAM;QAC5C;MACF;IAIF;EACF,CAAC;;EACDkB,QAAQ,EAAE;IACV,GAAGvC,UAAU,CAAC;MACVY,cAAc,EAAE,gBAAgB;MAChCgB,YAAY,EAAE,cAAc;MAC5BY,WAAW,EAAE;IAEf,CAAC;EACH;AACJ","names":["mapActions","mapGetters","HeaderComponent","name","components","data","headingValue","tagId","$route","params","tag","title","description","successMessage","message","mounted","isLoading","tagDetailsAction","postId","then","response","status","results","methods","tagUpdateAction","tagUpdate","tagData","id","post","errorMessage","code","window","scrollTo","setTimeout","$router","push","path","error","console","log","computed","postDetails"],"sourceRoot":"","sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/views/TagUpdate.vue"],"sourcesContent":["<template>\n <HeaderComponent :heading=\"headingValue\" />\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n            <p v-if=\"successMessage\" class=\"h4 text-success \">{{successMessage}}</p>\n            <p v-if=\"message\" class=\"h4 text-primary \">{{message}}</p>\n\n      </div>\n\n    </div>\n  </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <form @submit.prevent=\"tagUpdate\">\n          <div class=\"mb-2\">\n            <input v-model=\"tag.title\" type=\"text\" class=\"form-control\" placeholder=\"Title\">\n            <p v-if=\"errorMessage.results && errorMessage.results.title\" class=\"h6 text-danger \">{{errorMessage.results.title[0]}}</p>\n          </div>\n          <div class=\"mb-2\">\n            \n            <textarea v-model=\"post.description\" class=\"form-control\" placeholder=\"Description\"></textarea>\n            <p v-if=\"errorMessage.results && errorMessage.results.description\" class=\"h6 text-danger \">{{errorMessage.results.description[0]}}</p>\n          </div>\n          \n          <div class=\"mb-2\">\n            <input type=\"submit\" class=\"btn btn-success\" value=\"Update\">\n          </div>\n        </form>\n      </div>\n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport HeaderComponent from  '@/components/HeaderComponent.vue'\n\nexport default {\n    name:'TagUpdate',\n    components:{\n      HeaderComponent\n    },\n    data(){\n        return{\n            headingValue : \"Update Tag\",\n            tagId: this.$route.params.tagId,\n            tag:{},\n            title:'',\n            description:'',\n            successMessage:'',\n            message:'',\n            \n            \n        }\n    },\n    mounted(){\n        this.isLoading = true;\n        this.tagDetailsAction(this.postId).then((response) => {\n        if (response.status === 200) {\n          this.tag = response.data.results;\n          this.isLoading = false;\n        }\n      });\n    },\n    methods:{\n      ...mapActions({\n        tagUpdateAction: 'tagUpdate',\n        tagDetailsAction: 'tagDetails',\n      }),\n      tagUpdate(){\n          try{\n            const tagData = {\n              id: this.tagId,\n              title: this.post.title,\n              description: this.post.description,\n            };\n            this.tagUpdateAction(tagData).then((response) => {\n              this.errorMessage.results=[]\n\n              if (response.data.status.code === 200){\n                window.scrollTo(0, 0);\n                this.successMessage =response.data.status.message\n                setTimeout(() => {\n                  this.successMessage = '';\n                }, 3000);\n                setTimeout( () => this.$router.push({ path: '/post/list'}), 3000);\n                //return this.$router.push('/')\n              }else{\n                this.message ='Some Error Occured. Can you please try again'\n                setTimeout(() => {\n                  this.message = '';\n                }, 3000);\n\n                //return this.$router.push('/register')\n\n              }\n            });\n          }\n        catch(error){\n          console.log(error.response.data.results)\n          this.errorMessage=error.response.data.results\n          // return this.$router.push('/register')\n        }\n        \n        \n\n      }\n    },\n    computed: {\n    ...mapGetters({\n        successMessage: 'getPostSuccess',\n        errorMessage: 'getPostError',\n        postDetails: 'getpostDetails',\n\n      }),\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}