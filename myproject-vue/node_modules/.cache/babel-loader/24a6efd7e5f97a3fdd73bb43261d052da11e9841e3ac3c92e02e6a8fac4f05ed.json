{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport $ from 'jquery';\nimport { mapActions, mapGetters } from 'vuex';\nimport SpinnerComponent from '@/components/SpinnerComponent.vue';\nimport HeaderComponent from '@/components/HeaderComponent.vue';\nexport default {\n  name: 'PostList',\n  components: {\n    SpinnerComponent,\n    HeaderComponent\n  },\n  data() {\n    return {\n      headingValue: \"Post Listing Page\",\n      loading: false,\n      errorMessage: null,\n      postList: [],\n      successMessage: '',\n      message: ''\n    };\n  },\n  mounted() {\n    if (localStorage.getItem('reloaded')) {\n      localStorage.removeItem('reloaded');\n    } else {\n      localStorage.setItem('reloaded', '1');\n      location.reload();\n    }\n    this.isLoading = true;\n    this.postListAction().then(response => {\n      if (response.status === 200) {\n        this.postList = response.data.results;\n        $('#post-table').DataTable({\n          data: response.data.results,\n          columns: [{\n            data: 'id'\n          }, {\n            data: 'title'\n          }, {\n            data: 'id',\n            render: function (data) {\n              return `<div class=\"d-flex flex-column justify-content-center align-items-center\">\\\n                                  <button data-id=${data} class=\"view btn btn-warning my-1\">\\\n                                    <i class=\"fa fa-eye\"></i></button>\\\n                                  <button data-id=${data} class=\"edit btn btn-primary my-1\">\\\n                                    <i class=\"fa fa-pen\"></i></button>\n                                  <button data-id=${data} class=\"delete btn btn-danger my-1\" ><i class=\"fa fa-trash\"></i></button> \\\n                                </div> `;\n            }\n          }]\n        });\n        this.isLoading = false;\n      }\n    });\n    $(window).on('pageshow', function () {\n      $(\".view\").click(function () {\n        let id = $(this).data('id');\n        window.location = '/post/details/' + id;\n      });\n      $(\".edit\").click(function () {\n        let id = $(this).data('id');\n        window.location = '/post/update/' + id;\n      });\n      $(\".delete\").click(() => {\n        let id = $(this).data('id');\n        this.postDelete(id);\n      });\n    });\n  },\n  methods: {\n    ...mapActions({\n      postListAction: 'postList',\n      postDeleteAction: 'postDelete'\n    }),\n    postDelete: function (postId) {\n      try {\n        this.postDeleteAction(postId).then(response => {\n          if (response.data.status.code === 200) {\n            window.scrollTo(0, 0);\n            this.successMessage = response.data.status.message;\n            setTimeout(() => {\n              this.successMessage = '';\n            }, 3000);\n            setTimeout(() => this.$router.push({\n              path: '/post/list'\n            }), 3000);\n          } else {\n            this.message = 'Some Error Occured. Can you please try again';\n            setTimeout(() => {\n              this.message = '';\n            }, 3000);\n          }\n        });\n      } catch (error) {\n        console.log(error.response.data.results);\n        this.errorMessage = error.response.data.results;\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      postList: 'getPostList',\n      successMessage: 'getPostSuccess',\n      errorMessage: 'getPostError'\n    })\n  }\n};","map":{"version":3,"mappings":"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","names":["$","mapActions","mapGetters","SpinnerComponent","HeaderComponent","name","components","data","headingValue","loading","errorMessage","postList","successMessage","message","mounted","localStorage","getItem","removeItem","setItem","location","reload","isLoading","postListAction","then","response","status","results","DataTable","columns","render","window","on","click","id","postDelete","methods","postDeleteAction","postId","code","scrollTo","setTimeout","$router","push","path","error","console","log","computed"],"sourceRoot":"","sources":["/home/shilpa/Public/my-work/code/demo-authentication/authenticate-vue/src/views/PostList.vue"],"sourcesContent":["<template>\n <HeaderComponent :heading=\"headingValue\" />\n\n <!--spinner -->\n <div v-if=\"loading === true\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <SpinnerComponent/>\n      </div>\n    </div>\n  </div>\n\n </div>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n            <p v-if=\"successMessage\" class=\"h4 text-success \">{{successMessage}}</p>\n            <p v-if=\"message\" class=\"h4 text-primary \">{{message}}</p>\n\n      </div>\n\n    </div>\n  </div>\n<div class=\"container mt-3\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <router-link to=\"/post/create\" class=\"btn btn-success btn-sm\"><i class=\"fa fa-plus-circle\"></i> Add New</router-link>      \n    </div>\n  </div>\n</div>\n<div class=\"container mt-3\">\n  <table id=\"post-table\" class=\"table table-bordered mt-5\">\n    <thead>\n      <tr>\n        <th> ID</th>\n        <th> Title</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n\n    </tbody>\n  </table>\n</div>\n <div class=\"container mt-3\" >\n  <div class=\"row\">\n   <div class=\"col-md-6\" v-for=\"post of postList\" :key=\"post.id\"> \n      <div class=\"card my-2 list-group-item-success shadow-lg\" >\n        <div class=\"card-body\">\n          <div class=\"row align-items-center\">\n            <div class=\"col-sm-4\">\n                <img class=\"user-img\" :src=\"post.image\">\n            </div>\n            <div class=\"col-sm-7\">\n              <ul class=\"list-group\">\n                <li class=\"list-group-item\">Title: <span class=\"fw-bold\">{{post.title}} </span></li>\n              </ul>\n\n            </div>\n             <div class=\"col-sm-1 d-flex flex-column justify-content-center align-items-center\">\n              <router-link :to=\"`/post/details/${post.id}`\" class=\"btn btn-warning my-1\">\n                <i class=\"fa fa-eye\"></i>\n              </router-link>\n              <router-link :to=\"`/post/update/${post.id}`\" class=\"btn btn-primary my-1\">\n                <i class=\"fa fa-pen\"></i>\n             </router-link>\n              <button @click=\"postDelete(post.id)\" class=\"btn btn-danger my-1\" ><i class=\"fa fa-trash\"></i></button> \n            </div> \n          </div>\n        </div>\n      </div>\n   </div>\n  </div>\n </div>\n\n</template>\n\n<script>\nimport $ from 'jquery'\nimport { mapActions, mapGetters } from 'vuex';\nimport SpinnerComponent from  '@/components/SpinnerComponent.vue'\nimport HeaderComponent from  '@/components/HeaderComponent.vue'\n\nexport default {\n    name:'PostList',\n    components:{\n      SpinnerComponent,\n      HeaderComponent\n    },\n    data(){\n      return{\n        headingValue : \"Post Listing Page\",\n        loading:false,\n        errorMessage:null,\n        postList:[],\n        successMessage:'',\n        message:'',\n      }\n    },\n    mounted(){\n      if (localStorage.getItem('reloaded')) {\n        \n        localStorage.removeItem('reloaded');\n    } else {\n        localStorage.setItem('reloaded', '1');\n        location.reload();\n    }\n      this.isLoading = true;\n      this.postListAction().then((response) => {\n        if (response.status === 200) {\n          this.postList = response.data.results;\n          $('#post-table').DataTable( {\n                data: response.data.results,\n                columns: [\n                    { data: 'id' },\n                    { data: 'title' },\n                    {\n                      data: 'id',\n                      render: function(data){\n                        return `<div class=\"d-flex flex-column justify-content-center align-items-center\">\\\n                                  <button data-id=${data} class=\"view btn btn-warning my-1\">\\\n                                    <i class=\"fa fa-eye\"></i></button>\\\n                                  <button data-id=${data} class=\"edit btn btn-primary my-1\">\\\n                                    <i class=\"fa fa-pen\"></i></button>\n                                  <button data-id=${data} class=\"delete btn btn-danger my-1\" ><i class=\"fa fa-trash\"></i></button> \\\n                                </div> `;\n                      }\n                    \n                    }\n                ]\n            } )\n          this.isLoading = false;\n        }\n      });\n    \n  \n\n      $(window).on('pageshow',function(){ \n        $(\".view\").click(function() {\n          let id = $(this).data('id');\n          window.location = '/post/details/' + id;\n        });\n        $(\".edit\").click(function() {\n          let id = $(this).data('id');\n          window.location = '/post/update/' + id;\n        });\n        $(\".delete\").click(() => {\n          let id = $(this).data('id');\n            this.postDelete(id);\n        });\n        \n      }); \n    },\n    methods:{\n      ...mapActions({\n        postListAction: 'postList',\n        postDeleteAction: 'postDelete',\n      }),\n        postDelete :function(postId){\n          try{\n            this.postDeleteAction(postId).then((response) => {\n              if (response.data.status.code === 200){\n                \n                window.scrollTo(0, 0);\n                this.successMessage =response.data.status.message\n                setTimeout(() => {\n                  this.successMessage = '';\n                }, 3000);\n                setTimeout( () => this.$router.push({ path: '/post/list'}), 3000);\n              }else{\n                this.message ='Some Error Occured. Can you please try again'\n                setTimeout(() => {\n                  this.message = '';\n                }, 3000);\n\n              }\n            });\n          }\n        catch(error){\n          console.log(error.response.data.results)\n          this.errorMessage=error.response.data.results\n        }\n        },\n        \n      },\n      computed: {\n        ...mapGetters({\n          postList: 'getPostList',\n          successMessage: 'getPostSuccess',\n          errorMessage: 'getPostError',\n        })\n      }\n    \n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}